/*
COLORS:

Light green: #7ed56f
Medium green: #55c57a
Dark green: #28b485

*/

/* reset CSS so no default CSS properties are inherited */
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

/* font can be inherited so we use body selector */
body {
  font-family: "Lato", sans-serif;
  font-weight: 400;
  font-size: 16px;
  line-height: 1.7;
  color: #777;
  padding: 30px;
}

.header {
  height: 95vh;
  background-image:
    linear-gradient(
        to right bottom,
        rgba(126, 213, 111, 0.8),
        rgba(40, 180, 131, 0.8)),
  url(../img/hero.jpg);
  /* gradient on top of background image */
  background-size: cover;
  background-position: top;
  /* photo will stay fixed at top. other props are bottom and center */
  clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
  position: relative;
  /* so that logo-box (the child element) can be positioned relative to header */
}

.logo-box {
  position: absolute;
  top: 40px;
  left: 40px;
}

.logo {
  height: 35px;
}

.logo:hover {
  animation: rotate 1s ease-out;
}

.text-box {
  position: absolute;
  /* 40% or 50% relative to the parent element */
  top: 40%;
  left: 50%;
  transform: translate(-50%, -50%);
  text-align: center;
}

.heading-primary {
  color: #ffffff;
  text-transform: uppercase;

  /* stop animation from shaking */
  backface-visibility: hidden;
  margin-bottom: 60px;
}

.heading-primary-main {
  display: block;
  font-size: 60px;
  font-weight: 400;
  letter-spacing: 35px;

  /* specify name and duration of the animation */
  animation-name: moveInLeft;
  animation-duration: 1.5s;
  /* ease-in ease-out cubic-bezier */
  animation-timing-function: ease-out;

  /*
  animation-iteration-count: 3;
  animation-delay: 3s;
   */
}

.heading-primary-sub {
  display: block;
  font-size: 20px;
  font-weight: 700;
  letter-spacing: 17.4px;

  /* shorthand for name, duration, and timing-function */
  animation: moveInRight 1.5s ease-out;
}

/* browser is optimized for opacity and transform */
@keyframes moveInLeft {
  0% {
    opacity: 0;
    transform: translateX(-100px);
  }

  80% {
    transform: translateX(20px);
  }

  100% {
    opacity: 1;
    transform: translate(0);
  }
}

@keyframes moveInRight {
  0% {
    opacity: 0;
    transform: translateX(100px);
  }

  80% {
    transform: translateX(-20px);
  }

  100% {
    opacity: 1;
    transform: translate(0);
  }
}

@keyframes moveInBottom {
  0% {
    opacity: 0;
    transform: translateY(100px);
  }

  100% {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes rotate {
  0% {
    transform: rotate(180deg);
  }

  100% {
    transform: rotate(0);
  }
}

.btn:hover {
  transform: translateY(-3px);
  box-shadow: 0 10px 20px rgba(0, 0, 0, .2);
}

.btn:active {
  transform: translateY(-1px);
  box-shadow: 0 5px 10px rgba(0, 0, 0, .2);
}

.btn:link,
.btn:visited {
  text-transform: uppercase;
  text-decoration: none;
  padding: 15px 40px;
  display: inline-block;
  border-radius: 100px;
  transition: all .2s;
  position: relative;
}

.btn-white {
  background-color: #fff;
  color: #777;
}

.btn::after {
  content: "";
  display: inline-block;
  height: 100%;
  width: 100%;
  border-radius: 100px;
  position: absolute;
  top: 0;
  left: 0;
  z-index: -1;
  transition: all .4s;
}

.btn-white::after {
  background-color: #fff;
}

.btn:hover::after {
  transform: scaleX(1.4) scaleY(1.6);
  opacity: 0;
}

.btn-animated {
  animation: moveInBottom 1.5s ease-out 0.75s;
  /* apply the animation state at the beginning so that button's opacity = 0 */
  animation-fill-mode: backwards;
}
