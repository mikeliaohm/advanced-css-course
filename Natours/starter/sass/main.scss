@import "./base/base";

$color-primary: #55c57a; //yellow color
$color-primary-light: #7ed56f; //yellow color
$color-primary-dark: #28b485; //yellow color
$color-secondary: #f08a5d; //orange
$color-tertiary: #b83b5e; //pink
$color-text-dark: #333; //grey
$color-text-light: #eee;

$color-grey-dark: #777;
$color-white: #fff;
$color-black: #000;

$width-button: 150px;

/* reset CSS so no default CSS properties are inherited */
*,
*::after,
*::before {
  margin: 0;
  padding: 0;
  box-sizing: inherit;
}

html {
  font-size: 62.5%; // 10px / 16px;
}

/* font can be inherited so we use body selector */
body {
  font-family: "Lato", sans-serif;
  font-weight: 400;
  font-size: 1.6rem;
  /* font-size: 16px; */
  line-height: 1.7;
  color: $color-grey-dark;
  padding: 3rem;
  box-sizing: border-box;
}

.header {
  height: 95vh;
  background-image:
    linear-gradient(
        to right bottom,
        rgba($color-primary-light, 0.8),
        rgba($color-primary-dark, 0.8)),
  url(../img/hero.jpg);
  /* gradient on top of background image */
  background-size: cover;
  background-position: top;
  /* photo will stay fixed at top. other props are bottom and center */
  clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
  position: relative;
  /* so that logo-box (the child element) can be positioned relative to header */

  &__logo-box {
    position: absolute;
    top: 4rem;
    left: 4rem;
  }

  &__logo {
    height: 3.5rem;
  }

  &__logo:hover {
    animation: rotate 1s ease-out;
  }

  &__text-box {
    position: absolute;
    /* 40% or 50% relative to the parent element */
    top: 40%;
    left: 50%;
    transform: translate(-50%, -50%);
    text-align: center;
  }
}


.heading-primary {
  color: #ffffff;
  text-transform: uppercase;

  /* stop animation from shaking */
  backface-visibility: hidden;
  margin-bottom: 6rem;

  &--main {
    display: block;
    font-size: 6rem;
    font-weight: 400;
    letter-spacing: 3.5rem;

    /* specify name and duration of the animation */
    animation-name: moveInLeft;
    animation-duration: 1.5s;
    /* ease-in ease-out cubic-bezier */
    animation-timing-function: ease-out;

    /*
    animation-iteration-count: 3;
    animation-delay: 3s;
    */
  }

  &--sub {
    display: block;
    font-size: 2rem;
    font-weight: 700;
    letter-spacing: 1.75rem;

    /* shorthand for name, duration, and timing-function */
    animation: moveInRight 1.5s ease-out;
  }
}


/* browser is optimized for opacity and transform */
@keyframes moveInLeft {
  0% {
    opacity: 0;
    transform: translateX(-10rem);
  }

  80% {
    transform: translateX(2rem);
  }

  100% {
    opacity: 1;
    transform: translate(0);
  }
}

@keyframes moveInRight {
  0% {
    opacity: 0;
    transform: translateX(10rem);
  }

  80% {
    transform: translateX(-2rem);
  }

  100% {
    opacity: 1;
    transform: translate(0);
  }
}

@keyframes moveInBottom {
  0% {
    opacity: 0;
    transform: translateY(10rem);
  }

  100% {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes rotate {
  0% {
    transform: rotate(180deg);
  }

  100% {
    transform: rotate(0);
  }
}

.btn {

  &:hover {
    transform: translateY(-.3rem);
    box-shadow: 0 1rem 2rem rgba($color-black, .2);

    &::after {
      transform: scaleX(1.4) scaleY(1.6);
      opacity: 0;
    }
  }

  &:active {
    transform: translateY(-.1rem);
    box-shadow: 0 .5rem 1rem rgba($color-black, .2);
  }

  &:link,
  &:visited {
    text-transform: uppercase;
    text-decoration: none;
    padding: 1.5rem 4rem;
    display: inline-block;
    border-radius: 10rem;
    transition: all .2s;
    position: relative;
    font-size: 1.6rem;
  }

  &--white {
    background-color: $color-white;
    color: $color-grey-dark;

    &::after {
      background-color: $color-white;
    }
  }

  &::after {
    content: "";
    display: inline-block;
    height: 100%;
    width: 100%;
    border-radius: 10rem;
    position: absolute;
    top: 0;
    left: 0;
    z-index: -1;
    transition: all .4s;
  }

  &--animated {
    animation: moveInBottom 1.5s ease-out 0.75s;
    /* apply the animation state at the beginning so that button's opacity = 0 */
    animation-fill-mode: backwards;
  }
}
